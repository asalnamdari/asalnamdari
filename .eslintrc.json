{
  "env": {
    "browser": true,
    "node": true
  },
  "extends": [
    "eslint:recommended",
    "plugin:react/recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:@typescript-eslint/recommended-requiring-type-checking"
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "project": "tsconfig.json",
    "sourceType": "module"
  },
  "plugins": [
    "react",
    "prettier",
    "@typescript-eslint",
    "react-hooks",
    "jsx-a11y",
    "prefer-arrow",
    "import"
  ],
  "settings": {
    "import/resolver": {
      "typescript": {}
    }
  },
  "rules": {
    "prettier/prettier": 0,
    "@typescript-eslint/adjacent-overload-signatures": "error",
    "@typescript-eslint/array-type": ["error", { "default": "array" }],
    "@typescript-eslint/ban-ts-comment": "off",
    "@typescript-eslint/ban-types": [
      "warn",
      {
        "types": {
          "Object": {
            "message": "Avoid using the `Object` type. Did you mean `object`?"
          },
          "{}": {
            "message": "Use object instead",
            "fixWith": "object"
          },
          "Function": {
            "message": "Avoid using the `Function` type. Prefer a specific function type, like `() => void`."
          },
          "Boolean": {
            "message": "Avoid using the `Boolean` type. Did you mean `boolean`?"
          },
          "Number": {
            "message": "Avoid using the `Number` type. Did you mean `number`?"
          },
          "String": {
            "message": "Avoid using the `String` type. Did you mean `string`?"
          },
          "Symbol": {
            "message": "Avoid using the `Symbol` type. Did you mean `symbol`?"
          }
        }
      }
    ],
    "@typescript-eslint/class-literal-property-style": "error",
    "@typescript-eslint/consistent-type-assertions": "error",
    "@typescript-eslint/member-delimiter-style": [
      "off"
      // {
      //   multiline: {
      //     delimiter: 'none',
      //     requireLast: true,
      //   },
      //   singleline: {
      //     delimiter: 'comma',
      //     requireLast: true,
      //   },
      // },
    ],
    "@typescript-eslint/member-ordering": [
      "warn",
      { "default": { "memberTypes": ["field", "method"] } }
    ],
    "@typescript-eslint/no-confusing-non-null-assertion": "error",
    "@typescript-eslint/no-extra-non-null-assertion": "error",
    "@typescript-eslint/no-non-null-asserted-optional-chain": "error",
    "@typescript-eslint/no-require-imports": "error",
    "@typescript-eslint/no-this-alias": "error",
    "no-throw-literal": "error",
    "@typescript-eslint/no-throw-literal": "error",
    "@typescript-eslint/no-unnecessary-boolean-literal-compare": "error",
    "@typescript-eslint/no-unnecessary-type-arguments": "error",
    "@typescript-eslint/no-unnecessary-type-assertion": "off",
    "@typescript-eslint/no-non-null-assertion": "off",
    "@typescript-eslint/no-unsafe-return": "warn",
    "@typescript-eslint/no-var-requires": "warn",
    "@typescript-eslint/prefer-as-const": "warn",
    "@typescript-eslint/prefer-includes": "error",
    "@typescript-eslint/prefer-nullish-coalescing": "error",
    "@typescript-eslint/prefer-reduce-type-parameter": "warn",
    "@typescript-eslint/prefer-string-starts-ends-with": "error",
    "@typescript-eslint/prefer-ts-expect-error": "warn",
    "@typescript-eslint/restrict-plus-operands": "warn",
    "@typescript-eslint/switch-exhaustiveness-check": "error",
    "@typescript-eslint/unbound-method": "off",
    "@typescript-eslint/explicit-module-boundary-types": "off",
    "@typescript-eslint/unified-signatures": "error",
    "@typescript-eslint/no-unsafe-assignment": "off",
    "@typescript-eslint/restrict-template-expressions": "off",
    "@typescript-eslint/no-floating-promises": "off",
    "@typescript-eslint/no-unsafe-member-access": "off",
    "@typescript-eslint/no-unsafe-call": "off",
    "brace-style": "off",
    "@typescript-eslint/brace-style": [
      "error",
      "1tbs",
      { "allowSingleLine": true }
    ],
    "dot-notation": "off",
    "@typescript-eslint/dot-notation": ["error"],
    "keyword-spacing": "off",
    "@typescript-eslint/keyword-spacing": ["error"],
    "no-dupe-class-members": "off",
    "@typescript-eslint/no-dupe-class-members": ["error"],
    "no-extra-parens": "off",
    "@typescript-eslint/no-extra-parens": "off",
    "no-unused-vars": "off",
    "react/jsx-uses-vars": "error",
    "@typescript-eslint/no-unused-vars": [
      "error",
      {
        "vars": "all",
        "args": "after-used",
        "argsIgnorePattern": "^_",
        "ignoreRestSiblings": true,
        "caughtErrorsIgnorePattern": "^ignore"
      }
    ],
    "no-use-before-define": "off",
    "@typescript-eslint/no-use-before-define": ["warn"],
    "quotes": "off",
    "@typescript-eslint/quotes": [
      "error",
      "single",
      { "avoidEscape": true, "allowTemplateLiterals": true }
    ],
    "semi": "off",
    "@typescript-eslint/semi": [
      "error",
      "never",
      { "beforeStatementContinuationChars": "always" }
    ],
    "space-before-function-paren": "off",
    "@typescript-eslint/space-before-function-paren": ["off"],

    "@typescript-eslint/consistent-type-definitions": "off",
    "@typescript-eslint/no-empty-function": "off",
    "@typescript-eslint/no-explicit-any": "off",
    "@typescript-eslint/no-parameter-properties": "off",
    "@typescript-eslint/no-unused-expressions": "off",
    "@typescript-eslint/prefer-for-of": "error",
    "@typescript-eslint/prefer-function-type": "error",
    "@typescript-eslint/triple-slash-reference": [
      "error",
      {
        "path": "always",
        "types": "prefer-import",
        "lib": "always"
      }
    ],
    "arrow-parens": ["off", "always"],
    "comma-dangle": "off",
    "complexity": "off",
    "constructor-super": "error",
    "eol-last": "off",
    "eqeqeq": ["error", "smart"],
    "guard-for-in": "error",
    "id-match": "error",
    "linebreak-style": "off",
    "max-classes-per-file": ["error", 1],
    "new-parens": "off",
    "no-bitwise": "error",
    "no-caller": "error",
    "no-cond-assign": "error",
    "no-debugger": "error",
    "no-empty": "off",
    "no-eval": "error",
    "no-extra-semi": "error",
    "no-fallthrough": "off",
    "no-invalid-this": "off",
    "no-irregular-whitespace": "off",
    "no-multiple-empty-lines": "error",
    "no-new-wrappers": "error",
    "no-undef-init": "error",
    "no-underscore-dangle": "off",
    "no-unsafe-finally": "error",
    "no-unused-labels": "error",
    "object-shorthand": "error",
    "one-var": ["error", "never"],
    "prefer-arrow/prefer-arrow-functions": "warn",
    "quote-props": ["error", "as-needed"],
    "radix": ["error", "as-needed"],
    "space-in-parens": ["off", "never"],
    "use-isnan": "error",
    "valid-typeof": "error",
    "no-void": "off",
    "class-methods-use-this": "off",
    "import/imports-first": "error",
    "import/newline-after-import": "warn",
    "import/no-dynamic-require": "error",
    "import/no-extraneous-dependencies": "off",
    "import/no-named-as-default": "error",
    "import/named": "error",
    "import/no-unresolved": "off",
    "import/no-webpack-loader-syntax": "off",
    "jsx-a11y/aria-props": "error",
    "jsx-a11y/heading-has-content": "off",
    "jsx-a11y/label-has-associated-control": [
      2,
      {
        // NOTE: If this error triggers, either disable it or add
        // your custom components, labels and attributes via these options
        // Pr https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/label-has-associated-control.md
        "controlComponents": ["Input"]
      }
    ],
    "jsx-a11y/label-has-for": "off",
    "jsx-a11y/mouse-events-have-key-events": "off",
    "jsx-a11y/role-has-required-aria-props": "error",
    "jsx-a11y/role-supports-aria-props": "error",
    "max-len": "off",
    "newline-per-chained-call": "off",
    "no-confusing-arrow": "off",
    "no-console": "warn",
    "prefer-template": "error",
    "react/destructuring-assignment": "off",
    "react-hooks/rules-of-hooks": "error",
    "react-hooks/exhaustive-deps": "off",
    "react/prop-types": "off",
    "react/jsx-closing-tag-location": "off",
    "react/forbid-prop-types": "off",
    "react/jsx-first-prop-new-line": ["error", "multiline"],
    "react/jsx-filename-extension": "off",
    "react/jsx-no-target-blank": "off",
    "react/require-default-props": "off",
    "react/require-extension": "off",
    "react/self-closing-comp": "off",
    "react/sort-comp": "off",
    "react/display-name": "off",
    "react/jsx-uses-react": "off",
    "react/react-in-jsx-scope": "off",
    "@typescript-eslint/no-shadow": ["error"]
  }
}
