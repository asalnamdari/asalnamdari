
stages:
  - dockerize
  - deploy

dockerize:
  image: docker:stable
  stage: dockerize
  variables:
    DOCKER_TLS_CERTDIR: ""
  services:
    - docker:dind
  before_script:
    - source .${CI_COMMIT_REF_NAME}.env
    - docker login -u "$DOCKER_USER" -p "$DOCKER_PASSWORD" docker.io
  script:
    - echo "Starting dockerize..."
    - docker build -t "$IMAGE_NAME" .
    - docker push "$DOCKER_REPOSITORY"
  only:
    - master
    - beta

deploy:
  image: ubuntu:latest
  stage: deploy
  before_script:
    - 'command -v ssh-agent >/dev/null || ( apt-get update -y && apt-get install openssh-client -y )'
    - eval $(ssh-agent -s)
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo $SSH_PRIVATE_KEY >> ~/.ssh/id_rsa
    - chmod og= $SSH_PRIVATE_KEY
    - source .${CI_COMMIT_REF_NAME}.env
  script:
    - echo "Starting deploy..."
    - ssh -i $SSH_PRIVATE_KEY -o StrictHostKeyChecking=no root@$SERVER_IP "docker login -u $DOCKER_USER -p $DOCKER_PASSWORD docker.io"
    - ssh -i $SSH_PRIVATE_KEY -o StrictHostKeyChecking=no root@$SERVER_IP "docker stop $APP_NAME || true"
    - ssh -i $SSH_PRIVATE_KEY -o StrictHostKeyChecking=no root@$SERVER_IP "docker system prune -a -f"
    - ssh -i $SSH_PRIVATE_KEY -o StrictHostKeyChecking=no root@$SERVER_IP "docker image rm $IMAGE_NAME || true"
    - ssh -i $SSH_PRIVATE_KEY -o StrictHostKeyChecking=no root@$SERVER_IP "docker pull $IMAGE_NAME"
    - ssh -i $SSH_PRIVATE_KEY -o StrictHostKeyChecking=no root@$SERVER_IP "docker container run -d --name $APP_NAME -p $PORT:9000 -e SPRING_PROFILES_ACTIVE=$SPRING_ACTIVE_PROFILE $IMAGE_NAME"
    - ssh -i $SSH_PRIVATE_KEY -o StrictHostKeyChecking=no root@$SERVER_IP "docker logout"
  only:
    - master
    - beta